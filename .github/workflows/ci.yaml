name: CI
on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Build Images
      run: |
        docker build -t cloudv/base:latest -f ./docker/base.Dockerfile .
        docker build -t ${{ secrets.IMAGE_NAME }}:latest -f ./docker/cloudv.Dockerfile .
        docker build -t ${{ secrets.LAMBDA_IMAGE_NAME }}:latest -f ./docker/lambda.Dockerfile .
    - name: Get Tag
      if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}
      run: |
        echo TAG="$(ruby -e "print '$GITHUB_REF'.split('/')[2]")" >> $GITHUB_ENV
    - name: Configure AWS Credentials
      if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    - name: Login to Amazon ECR
      if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Push to ECR
      if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        LAMBDA_ECR_REPOSITORY: ${{ secrets.LAMBDA_ECR_REPOSITORY }}
      run: |
        docker image tag ${{ secrets.IMAGE_NAME }}:latest $ECR_REGISTRY/$ECR_REPOSITORY:$TAG 
        docker image tag ${{ secrets.IMAGE_NAME }}:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest 
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

        docker image tag ${{ secrets.LAMBDA_IMAGE_NAME }}:latest $ECR_REGISTRY/$LAMBDA_ECR_REPOSITORY:$TAG 
        docker image tag ${{ secrets.LAMBDA_IMAGE_NAME }}:latest $ECR_REGISTRY/$LAMBDA_ECR_REPOSITORY:latest 
        docker push $ECR_REGISTRY/$LAMBDA_ECR_REPOSITORY:latest

        